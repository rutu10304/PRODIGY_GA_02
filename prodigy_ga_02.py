# -*- coding: utf-8 -*-
"""PRODIGY_GA_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UAnZXqJ5AVVSnKwLpRlg2JqmKec8znu3
"""

!pip install --quiet diffusers transformers accelerate safetensors matplotlib

from diffusers import StableDiffusionPipeline
import torch
import matplotlib.pyplot as plt

# Replace this with your Hugging Face token
HUGGINGFACE_TOKEN = "your token here"

# Detect if GPU is available
device = "cuda" if torch.cuda.is_available() else "cpu"
print(f"Using device: {device}")

# Load the pipeline
pipe = StableDiffusionPipeline.from_pretrained(
    "CompVis/stable-diffusion-v1-4",  # Lightweight version
    use_auth_token=HUGGINGFACE_TOKEN
).to(device)

# Your text prompt here
prompt = "a fantasy landscape with mountains and a river"

# Generate image
with torch.autocast(device) if device == "cuda" else torch.no_grad():
    image = pipe(prompt).images[0]

# Show the image
plt.imshow(image)
plt.axis("off")
plt.title("Generated Image")
plt.show()

import ipywidgets as widgets
from IPython.display import display, clear_output

# Create a text input widget
prompt_input = widgets.Text(
    value='a cat wearing a space helmet',
    placeholder='Enter your prompt...',
    description='Prompt:',
    style={'description_width': 'initial'},
    layout=widgets.Layout(width='90%')
)

# Create a button widget
generate_button = widgets.Button(
    description="Generate Image",
    button_style='success',
    layout=widgets.Layout(width='30%')
)

# Output area for image or errors
output = widgets.Output()

# Function to handle generation
def on_click(b):
    with output:
        clear_output()
        prompt = prompt_input.value.strip()
        if not prompt:
            print("⚠️ Please enter a prompt.")
            return
        print(f"Generating image for: \"{prompt}\"...")
        try:
            with torch.autocast(device) if device == "cuda" else torch.no_grad():
                image = pipe(prompt).images[0]
            plt.imshow(image)
            plt.axis("off")
            plt.title("Generated Image")
            plt.show()
        except Exception as e:
            print("❌ Error:", e)

# Bind button click to function
generate_button.on_click(on_click)

# Display the chatbot interface
display(prompt_input, generate_button, output)